{"version":3,"sources":["node_modules/three/build/three.module.js","script.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_this9","count","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","Float64BufferAttribute","_BufferAttribute10","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","uv2","BoxGeometry","_BufferGeometry","_this16","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this18","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this19","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","extensionMultiDraw","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this26","isMeshDepthMaterial","_Material4","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_this28","isArrayCamera","Group","_Object3D4","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","FogExp2","Fog","Scene","_Object3D5","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this36","isBone","DataTexture","_Texture5","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this43","LineLoop","_Line2","_this44","_Material7","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this48","CompressedTexture","_Texture8","_this49","CompressedArrayTexture","_CompressedTexture","_this50","CompressedCubeTexture","_CompressedTexture2","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this53","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this55","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_this58","isLineCurve","LineCurve3","_Curve6","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this65","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this66","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this67","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this68","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this69","PolyhedronGeometry","_BufferGeometry6","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this72","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this75","OctahedronGeometry","_PolyhedronGeometry3","_this76","RingGeometry","_BufferGeometry9","_this77","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this80","TorusGeometry","_BufferGeometry12","_this81","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this84","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this85","RawShaderMaterial","_ShaderMaterial","_this86","_Material9","_this87","_MeshStandardMaterial","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_this89","_Material11","_this90","_Material12","_this91","_Material13","_this92","_Material14","_this93","_LineBasicMaterial","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this98","HemisphereLight","_Light","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this100","isSpotLightShadow","SpotLight","_Light2","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_this103","DirectionalLightShadow","_LightShadow3","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_this105","AmbientLight","_Light5","_this106","RectAreaLight","_Light6","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this108","MaterialLoader","_Loader8","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this110","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this111","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this121","GridHelper","_LineSegments2","_this122","PolarGridHelper","_LineSegments3","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this126","Box3Helper","_LineSegments6","_this127","PlaneHelper","_Line3","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","THREE","_interopRequireWildcard","require","_bg","_interopRequireDefault","_bg2","_bg3","obj","__esModule","default","_getRequireWildcardCache","getOwnPropertyDescriptor","querySelector","innerWidth","innerHeight","particlesGeometry","particlesMaterial","particles","appendChild","bg2","clock","animate","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","bundle","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '161';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.alphaToCoverage || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\t`;\n\n\tif ( parameters.isWebGL2 ) {\n\n\t\tprecisionstring += `precision ${parameters.precision} sampler3D;\n\t\tprecision ${parameters.precision} sampler2DArray;\n\t\tprecision ${parameters.precision} sampler2DShadow;\n\t\tprecision ${parameters.precision} samplerCubeShadow;\n\t\tprecision ${parameters.precision} sampler2DArrayShadow;\n\t\tprecision ${parameters.precision} isampler2D;\n\t\tprecision ${parameters.precision} isampler3D;\n\t\tprecision ${parameters.precision} isamplerCube;\n\t\tprecision ${parameters.precision} isampler2DArray;\n\t\tprecision ${parameters.precision} usampler2D;\n\t\tprecision ${parameters.precision} usampler3D;\n\t\tprecision ${parameters.precision} usamplerCube;\n\t\tprecision ${parameters.precision} usampler2DArray;\n\t\t`;\n\n\t}\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\trender( renderer, cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\textensions: { fragDepth: true },\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.mesh, cameraXR );\n\n\t\t}\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdepthSensing.render( renderer, cameraXR );\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tif ( xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false ) {\n\n\t\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import * as THREE from \"three\";\r\nimport \"./style.css\";\r\nimport bg2 from \"./img/bg2.png\"\r\nimport bg1 from \"./img/bg1.png\"\r\nimport bg3 from \"./img/bg3.png\"\r\nconst container = document.querySelector(\".three_bg\");\r\nconst loader = new THREE.TextureLoader();\r\n\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  window.innerWidth / window.innerHeight,\r\n  0.1,\r\n  1000 \r\n);\r\n\r\nconst particlesGeometry = new THREE.BufferGeometry();\r\nconst counts = 3000;\r\n\r\nconst positions = new Float32Array(counts * 3);\r\nfor (let i = 0; i < counts * 3; i++) {\r\n    positions[i] = (Math.random() - 0.5) * 10;\r\n}\r\n\r\nparticlesGeometry.setAttribute(\r\n    \"position\",\r\n    new THREE.BufferAttribute(positions, 3)\r\n);\r\n\r\nconst particlesMaterial = new THREE.PointsMaterial();\r\nparticlesMaterial.size = 0.01;\r\nparticlesMaterial.sizeAttenuation = true;\r\n\r\nconst particles = new THREE.Points(particlesGeometry, particlesMaterial);\r\n\r\nscene.add(particles)\r\n\r\nconst renderer = new THREE.WebGL1Renderer(); // Corrected typo: WebGL1Renderer -> WebGLRenderer\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ncontainer.appendChild(renderer.domElement);\r\n\r\nconst geometry = new THREE.PlaneGeometry(6, 6, 25, 5);\r\nconst material = new THREE.MeshBasicMaterial({\r\n    color: 0xff0000,\r\n    map: loader.load(bg2),\r\n    side:THREE.DoubleSide\r\n});\r\n\r\nconst mesh = new THREE.Mesh(geometry, material);\r\nscene.add(mesh);\r\ncamera.position.z = 5;\r\n\r\nconst count = geometry.attributes.position.count;\r\nconst clock = new THREE.Clock()\r\n\r\nfunction animate() {\r\n    const time = clock.getElapsedTime();\r\n    const elapsedTime = clock.getElapsedTime();\r\n\r\n    particles.position.y = -elapsedTime * 0.02; // Corrected typo: missing space before negative sign\r\n\r\n    for (let i = 0; i < count; i++) { // Corrected loop condition: count instead of counts\r\n        const x = geometry.attributes.position.getX(i);\r\n        const y = geometry.attributes.position.getY(i);\r\n\r\n        geometry.attributes.position.setZ(i, -y * time * 0.3);\r\n        geometry.computeVertexNormals(); // Corrected typo: computerVertexNormals -> computeVertexNormals\r\n        geometry.attributes.position.needsUpdate = true;\r\n    }\r\n\r\n    requestAnimationFrame(animate);\r\n    mesh.rotation.y += 0.01\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nanimate();\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}